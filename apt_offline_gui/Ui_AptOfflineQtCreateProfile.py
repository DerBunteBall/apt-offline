# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'AptOfflineQtCreateProfile.ui'
#
# Created by: PyQt4 UI code generator 4.11.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_CreateProfile(object):
    def setupUi(self, CreateProfile):
        CreateProfile.setObjectName(_fromUtf8("CreateProfile"))
        CreateProfile.setWindowModality(QtCore.Qt.ApplicationModal)
        CreateProfile.resize(443, 500)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(CreateProfile.sizePolicy().hasHeightForWidth())
        CreateProfile.setSizePolicy(sizePolicy)
        CreateProfile.setMinimumSize(QtCore.QSize(443, 400))
        CreateProfile.setMaximumSize(QtCore.QSize(443, 500))
        CreateProfile.setFocusPolicy(QtCore.Qt.NoFocus)
        self.srcBuildDeps = QtGui.QCheckBox(CreateProfile)
        self.srcBuildDeps.setEnabled(False)
        self.srcBuildDeps.setGeometry(QtCore.QRect(11, 230, 131, 25))
        self.srcBuildDeps.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.srcBuildDeps.setObjectName(_fromUtf8("srcBuildDeps"))
        self.aptBackendComboBox = QtGui.QComboBox(CreateProfile)
        self.aptBackendComboBox.setGeometry(QtCore.QRect(164, 276, 110, 30))
        self.aptBackendComboBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.aptBackendComboBox.setObjectName(_fromUtf8("aptBackendComboBox"))
        self.aptBackendComboBox.addItem(_fromUtf8(""))
        self.aptBackendComboBox.addItem(_fromUtf8(""))
        self.aptBackendComboBox.addItem(_fromUtf8(""))
        self.upgradeTaskComboBox = QtGui.QComboBox(CreateProfile)
        self.upgradeTaskComboBox.setEnabled(False)
        self.upgradeTaskComboBox.setGeometry(QtCore.QRect(330, 276, 100, 30))
        self.upgradeTaskComboBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.upgradeTaskComboBox.setObjectName(_fromUtf8("upgradeTaskComboBox"))
        self.upgradeTaskComboBox.addItem(_fromUtf8(""))
        self.upgradeTaskComboBox.addItem(_fromUtf8(""))
        self.upgradeTaskComboBox.addItem(_fromUtf8(""))
        self.targetReleaseCheckBox = QtGui.QCheckBox(CreateProfile)
        self.targetReleaseCheckBox.setEnabled(False)
        self.targetReleaseCheckBox.setGeometry(QtCore.QRect(11, 123, 143, 25))
        self.targetReleaseCheckBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.targetReleaseCheckBox.setObjectName(_fromUtf8("targetReleaseCheckBox"))
        self.targetReleaseTextInput = QtGui.QLineEdit(CreateProfile)
        self.targetReleaseTextInput.setEnabled(False)
        self.targetReleaseTextInput.setGeometry(QtCore.QRect(164, 121, 265, 30))
        self.targetReleaseTextInput.setMinimumSize(QtCore.QSize(0, 30))
        self.targetReleaseTextInput.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.targetReleaseTextInput.setReadOnly(False)
        self.targetReleaseTextInput.setObjectName(_fromUtf8("targetReleaseTextInput"))
        self.label = QtGui.QLabel(CreateProfile)
        self.label.setGeometry(QtCore.QRect(290, 281, 40, 20))
        self.label.setObjectName(_fromUtf8("label"))
        self.label_2 = QtGui.QLabel(CreateProfile)
        self.label_2.setGeometry(QtCore.QRect(62, 281, 100, 20))
        self.label_2.setObjectName(_fromUtf8("label_2"))
        self.generateChangelog = QtGui.QCheckBox(CreateProfile)
        self.generateChangelog.setEnabled(False)
        self.generateChangelog.setGeometry(QtCore.QRect(160, 230, 111, 25))
        self.generateChangelog.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.generateChangelog.setObjectName(_fromUtf8("generateChangelog"))
        self.cancelButton = QtGui.QPushButton(CreateProfile)
        self.cancelButton.setGeometry(QtCore.QRect(224, 451, 100, 32))
        self.cancelButton.setMinimumSize(QtCore.QSize(100, 30))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/icons/dialog-cancel.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.cancelButton.setIcon(icon)
        self.cancelButton.setObjectName(_fromUtf8("cancelButton"))
        self.createProfileButton = QtGui.QPushButton(CreateProfile)
        self.createProfileButton.setEnabled(True)
        self.createProfileButton.setGeometry(QtCore.QRect(72, 451, 100, 32))
        self.createProfileButton.setMinimumSize(QtCore.QSize(100, 30))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/icons/dialog-ok-apply.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.createProfileButton.setIcon(icon1)
        self.createProfileButton.setObjectName(_fromUtf8("createProfileButton"))
        self.lblConsoleOutput = QtGui.QLabel(CreateProfile)
        self.lblConsoleOutput.setGeometry(QtCore.QRect(2, 313, 116, 20))
        self.lblConsoleOutput.setObjectName(_fromUtf8("lblConsoleOutput"))
        self.consoleOutputHolder = QtGui.QTextEdit(CreateProfile)
        self.consoleOutputHolder.setGeometry(QtCore.QRect(2, 339, 427, 100))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.consoleOutputHolder.sizePolicy().hasHeightForWidth())
        self.consoleOutputHolder.setSizePolicy(sizePolicy)
        self.consoleOutputHolder.setMinimumSize(QtCore.QSize(0, 100))
        self.consoleOutputHolder.setMaximumSize(QtCore.QSize(16777215, 100))
        self.consoleOutputHolder.setFocusPolicy(QtCore.Qt.NoFocus)
        self.consoleOutputHolder.setObjectName(_fromUtf8("consoleOutputHolder"))
        self.lblSaveProfile = QtGui.QLabel(CreateProfile)
        self.lblSaveProfile.setGeometry(QtCore.QRect(30, 83, 131, 20))
        self.lblSaveProfile.setObjectName(_fromUtf8("lblSaveProfile"))
        self.profileFilePath = QtGui.QLineEdit(CreateProfile)
        self.profileFilePath.setEnabled(True)
        self.profileFilePath.setGeometry(QtCore.QRect(167, 80, 170, 30))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.profileFilePath.sizePolicy().hasHeightForWidth())
        self.profileFilePath.setSizePolicy(sizePolicy)
        self.profileFilePath.setMinimumSize(QtCore.QSize(0, 30))
        self.profileFilePath.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.profileFilePath.setObjectName(_fromUtf8("profileFilePath"))
        self.browseFilePathButton = QtGui.QPushButton(CreateProfile)
        self.browseFilePathButton.setGeometry(QtCore.QRect(341, 80, 85, 30))
        self.browseFilePathButton.setMinimumSize(QtCore.QSize(0, 30))
        self.browseFilePathButton.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.browseFilePathButton.setObjectName(_fromUtf8("browseFilePathButton"))
        self.srcPackageList = QtGui.QLineEdit(CreateProfile)
        self.srcPackageList.setEnabled(False)
        self.srcPackageList.setGeometry(QtCore.QRect(164, 193, 265, 30))
        self.srcPackageList.setMinimumSize(QtCore.QSize(0, 30))
        self.srcPackageList.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.srcPackageList.setReadOnly(False)
        self.srcPackageList.setObjectName(_fromUtf8("srcPackageList"))
        self.installSrcPackagesCheckBox = QtGui.QCheckBox(CreateProfile)
        self.installSrcPackagesCheckBox.setGeometry(QtCore.QRect(11, 195, 147, 25))
        self.installSrcPackagesCheckBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.installSrcPackagesCheckBox.setObjectName(_fromUtf8("installSrcPackagesCheckBox"))
        self.packageList = QtGui.QLineEdit(CreateProfile)
        self.packageList.setEnabled(False)
        self.packageList.setGeometry(QtCore.QRect(164, 157, 265, 30))
        self.packageList.setMinimumSize(QtCore.QSize(0, 30))
        self.packageList.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.packageList.setReadOnly(False)
        self.packageList.setObjectName(_fromUtf8("packageList"))
        self.installPackagesCheckBox = QtGui.QCheckBox(CreateProfile)
        self.installPackagesCheckBox.setGeometry(QtCore.QRect(11, 159, 143, 25))
        self.installPackagesCheckBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.installPackagesCheckBox.setObjectName(_fromUtf8("installPackagesCheckBox"))
        self.updateCheckBox = QtGui.QCheckBox(CreateProfile)
        self.updateCheckBox.setGeometry(QtCore.QRect(150, 10, 81, 25))
        self.updateCheckBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.updateCheckBox.setObjectName(_fromUtf8("updateCheckBox"))
        self.upgradePackagesCheckBox = QtGui.QCheckBox(CreateProfile)
        self.upgradePackagesCheckBox.setGeometry(QtCore.QRect(260, 10, 159, 25))
        self.upgradePackagesCheckBox.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.upgradePackagesCheckBox.setObjectName(_fromUtf8("upgradePackagesCheckBox"))
        self.lblInstallType = QtGui.QLabel(CreateProfile)
        self.lblInstallType.setGeometry(QtCore.QRect(3, 10, 117, 20))
        self.lblInstallType.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.lblInstallType.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.lblInstallType.setObjectName(_fromUtf8("lblInstallType"))

        self.retranslateUi(CreateProfile)
        QtCore.QMetaObject.connectSlotsByName(CreateProfile)
        CreateProfile.setTabOrder(self.updateCheckBox, self.upgradePackagesCheckBox)
        CreateProfile.setTabOrder(self.upgradePackagesCheckBox, self.profileFilePath)
        CreateProfile.setTabOrder(self.profileFilePath, self.browseFilePathButton)
        CreateProfile.setTabOrder(self.browseFilePathButton, self.targetReleaseCheckBox)
        CreateProfile.setTabOrder(self.targetReleaseCheckBox, self.targetReleaseTextInput)
        CreateProfile.setTabOrder(self.targetReleaseTextInput, self.installPackagesCheckBox)
        CreateProfile.setTabOrder(self.installPackagesCheckBox, self.packageList)
        CreateProfile.setTabOrder(self.packageList, self.installSrcPackagesCheckBox)
        CreateProfile.setTabOrder(self.installSrcPackagesCheckBox, self.srcPackageList)
        CreateProfile.setTabOrder(self.srcPackageList, self.srcBuildDeps)
        CreateProfile.setTabOrder(self.srcBuildDeps, self.generateChangelog)
        CreateProfile.setTabOrder(self.generateChangelog, self.aptBackendComboBox)
        CreateProfile.setTabOrder(self.aptBackendComboBox, self.upgradeTaskComboBox)
        CreateProfile.setTabOrder(self.upgradeTaskComboBox, self.createProfileButton)
        CreateProfile.setTabOrder(self.createProfileButton, self.cancelButton)

    def retranslateUi(self, CreateProfile):
        CreateProfile.setWindowTitle(_translate("CreateProfile", "Generate Signature", None))
        self.srcBuildDeps.setToolTip(_translate("CreateProfile", "Check to also include the Build Dependencies for the Source Packages", None))
        self.srcBuildDeps.setText(_translate("CreateProfile", "Src Build Deps", None))
        self.aptBackendComboBox.setToolTip(_translate("CreateProfile", "Choose APT backend. Default backend is the most tested and known to work under all scenarios", None))
        self.aptBackendComboBox.setItemText(0, _translate("CreateProfile", "apt-get", None))
        self.aptBackendComboBox.setItemText(1, _translate("CreateProfile", "apt", None))
        self.aptBackendComboBox.setItemText(2, _translate("CreateProfile", "python-apt", None))
        self.upgradeTaskComboBox.setToolTip(_translate("CreateProfile", "Choose upgrade type to perform", None))
        self.upgradeTaskComboBox.setItemText(0, _translate("CreateProfile", "upgrade", None))
        self.upgradeTaskComboBox.setItemText(1, _translate("CreateProfile", "dist-upgrade", None))
        self.upgradeTaskComboBox.setItemText(2, _translate("CreateProfile", "dselect-upgrade", None))
        self.targetReleaseCheckBox.setToolTip(_translate("CreateProfile", "Check to set the target release. If not specified, system default is picked", None))
        self.targetReleaseCheckBox.setText(_translate("CreateProfile", "Target Release", None))
        self.targetReleaseTextInput.setToolTip(_translate("CreateProfile", "Please specify valid target release name. If not specified, system default is picked", None))
        self.label.setToolTip(_translate("CreateProfile", "Choose upgrade type to perform", None))
        self.label.setText(_translate("CreateProfile", "Task", None))
        self.label_2.setToolTip(_translate("CreateProfile", "Choose APT backend. Default backend is the most tested and known to work under all scenarios", None))
        self.label_2.setText(_translate("CreateProfile", "APT Backend", None))
        self.generateChangelog.setToolTip(_translate("CreateProfile", "Check to generate changelog for the packages", None))
        self.generateChangelog.setText(_translate("CreateProfile", "Changelog", None))
        self.cancelButton.setText(_translate("CreateProfile", "Cancel", None))
        self.createProfileButton.setText(_translate("CreateProfile", "Create", None))
        self.lblConsoleOutput.setText(_translate("CreateProfile", "Console Output:", None))
        self.lblSaveProfile.setToolTip(_translate("CreateProfile", "New filename to save the signature data", None))
        self.lblSaveProfile.setText(_translate("CreateProfile", "Save Signature As ", None))
        self.profileFilePath.setToolTip(_translate("CreateProfile", "New filename to save the signature data", None))
        self.browseFilePathButton.setText(_translate("CreateProfile", "Browse", None))
        self.srcPackageList.setToolTip(_translate("CreateProfile", "List of Source packages to install, separated by space", None))
        self.installSrcPackagesCheckBox.setToolTip(_translate("CreateProfile", "Check to install Source Packages", None))
        self.installSrcPackagesCheckBox.setText(_translate("CreateProfile", "Source Packages", None))
        self.packageList.setToolTip(_translate("CreateProfile", "List of Binary packages to install, separated by space", None))
        self.installPackagesCheckBox.setToolTip(_translate("CreateProfile", "Check to install Binary packages", None))
        self.installPackagesCheckBox.setText(_translate("CreateProfile", "Binary Packages", None))
        self.updateCheckBox.setToolTip(_translate("CreateProfile", "Check to include APT Package Database Updates", None))
        self.updateCheckBox.setText(_translate("CreateProfile", "Update", None))
        self.upgradePackagesCheckBox.setToolTip(_translate("CreateProfile", "Check to include Package Upgrades", None))
        self.upgradePackagesCheckBox.setText(_translate("CreateProfile", "Upgrade Packages", None))
        self.lblInstallType.setToolTip(_translate("CreateProfile", "Check all tasks that apply. Eg. Update, Upgrade", None))
        self.lblInstallType.setText(_translate("CreateProfile", "Installation Type", None))

import resources_rc
